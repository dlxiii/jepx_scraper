name: OpenDenki_Data JEPX Spot data

on:
  schedule:
    - cron: '30 1 * * *'  # JST 10:30 every day
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  scrape:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: '1'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          playwright install --with-deps

      - name: Calculate JST target date
        id: jst_date
        run: |
          TZ=Asia/Tokyo
          HOUR=$(TZ=Asia/Tokyo date +'%H')
          MINUTE=$(TZ=Asia/Tokyo date +'%M')
          if [ "$HOUR" -lt 10 ] || { [ "$HOUR" -eq 10 ] && [ "$MINUTE" -lt 30 ]; }; then
            TARGET_DATE=$(TZ=Asia/Tokyo date +'%Y/%m/%d')
          else
            TARGET_DATE=$(TZ=Asia/Tokyo date -d '1 day' +'%Y/%m/%d')
          fi

          TARGET_DATE_SLUG=${TARGET_DATE////-}
          TARGET_YEAR=$(echo $TARGET_DATE | cut -d'/' -f1)

          echo "TARGET_DATE=$TARGET_DATE" >> "$GITHUB_ENV"
          echo "TARGET_DATE_SLUG=$TARGET_DATE_SLUG" >> "$GITHUB_ENV"
          echo "TARGET_YEAR=$TARGET_YEAR" >> "$GITHUB_ENV"
          echo "Target date: $TARGET_DATE (slug: $TARGET_DATE_SLUG)"
      
      - name: Run spot curve scraper
        run: python run_jepx_curve.py "$TARGET_DATE"

      - name: Run spot summary scraper
        run: python run_jepx_summary.py "$TARGET_DATE"

      - name: Run spot virtual price scraper
        run: python run_jepx_virtual_price.py "$TARGET_DATE"

      - name: Upload CSV artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jepx-${{ env.TARGET_DATE_SLUG }}
          path: |
            csv/${{ env.TARGET_YEAR }}/spot_bid_curves_${{ env.TARGET_DATE_SLUG }}.csv
            csv/${{ env.TARGET_YEAR }}/spot_splitting_areas_${{ env.TARGET_DATE_SLUG }}.csv
            csv/spot_summary_${{ env.TARGET_YEAR }}.csv
            csv/virtualprice_${{ env.TARGET_YEAR }}.csv
            csv/virtualprice_diff_${{ env.TARGET_YEAR }}.csv
          if-no-files-found: ignore

      - name: Commit and push CSVs to repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "dlxiii"
          git config --global user.email "tokyowangyulong@gmail.com"

          git fetch origin
          git checkout main

          git add csv/
          git commit -m "Auto commit JEPX CSV for ${{ env.TARGET_DATE_SLUG }}" || echo "No changes to commit"
          git push origin main

      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "OpenDenki_Data: JEPX Spot Data Scrape for ${{ env.TARGET_DATE_SLUG }} completed"
          to: opendenki_data@googlegroups.com
          from: OpenDenki Bot <${{ secrets.SMTP_USERNAME }}>
          body: |
            JEPX data scraping job for ${{ env.TARGET_DATE_SLUG }} has completed successfully.

            Files have been:
            - Saved in the repository under csv/
            - Uploaded to GitHub Actions Artifacts
            - Committed back to the manager's repository
            - Pushed to public repo [opendenki/jepx](https://github.com/opendenki/jepx)

            üåê Public access via jsDelivr CDN:

            - [spot_bid_curves_${{ env.TARGET_DATE_SLUG }}.csv](https://cdn.jsdelivr.net/gh/opendenki/jepx@main/jepx/${{ env.TARGET_YEAR }}/spot_bid_curves_${{ env.TARGET_DATE_SLUG }}.csv)
            - [spot_splitting_areas_${{ env.TARGET_DATE_SLUG }}.csv](https://cdn.jsdelivr.net/gh/opendenki/jepx@main/jepx/${{ env.TARGET_YEAR }}/spot_splitting_areas_${{ env.TARGET_DATE_SLUG }}.csv)
            - [spot_summary_${{ env.TARGET_YEAR }}.csv](https://cdn.jsdelivr.net/gh/opendenki/jepx@main/jepx/spot_summary_${{ env.TARGET_YEAR }}.csv)
            - [virtualprice_${{ env.TARGET_YEAR }}.csv](https://cdn.jsdelivr.net/gh/opendenki/jepx@main/jepx/virtualprice_${{ env.TARGET_YEAR }}.csv)
            - [virtualprice_diff_${{ env.TARGET_YEAR }}.csv](https://cdn.jsdelivr.net/gh/opendenki/jepx@main/jepx/virtualprice_diff_${{ env.TARGET_YEAR }}.csv)


            üìé View workflow logs:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
